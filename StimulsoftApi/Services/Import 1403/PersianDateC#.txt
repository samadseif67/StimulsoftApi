using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Web;

namespace Test1.Classes
{
    public class PersianDate
    {
		public  string ToPersian(DateTime date)
		{
			PersianCalendar pc = new PersianCalendar();
			int y = pc.GetYear(date);
			int m = pc.GetMonth(date);
			int d = pc.GetDayOfMonth(date);
			return string.Format("{0:d4}/{1:d2}/{2:d2}", y, m, d);
		}
		public  DateTime ToMiladi(string date)
		{
			PersianCalendar pc = new PersianCalendar();
			int y = Convert.ToInt32(date.Substring(0, 4));
			int m = Convert.ToInt32(date.Substring(5, 2));
			int d = Convert.ToInt32(date.Substring(8, 2));
			pc.ToDateTime(y, m, d, 0, 0, 0, 0);
			return pc.ToDateTime(y, m, d, 0, 0, 0, 0);
		}

		public  string ToPersianYear(DateTime date)
		{
			PersianCalendar pc = new PersianCalendar();
			int y = pc.GetYear(date);
			return string.Format("{0:d4}", y);
		}

		public  string ToMiladiForCheck(string date)
		{
			try
			{
				PersianCalendar pc = new PersianCalendar();
				int y = Convert.ToInt32(date.Substring(0, 4));
				int m = Convert.ToInt32(date.Substring(5, 2));
				int d = Convert.ToInt32(date.Substring(8, 2));
				pc.ToDateTime(y, m, d, 0, 0, 0, 0);
				return "1";
			}
			catch (Exception)
			{

				return "0";
			}

		}



		public  string GetDayOfWeekPersion()
		{

			string DayName = "";
			switch (DateTime.Now.DayOfWeek)
			{
				case DayOfWeek.Saturday:
					DayName = " شنبه ";
					break;
				case DayOfWeek.Sunday:
					DayName = " یکشنبه ";
					break;
				case DayOfWeek.Monday:
					DayName = " دوشنبه ";
					break;
				case DayOfWeek.Tuesday:
					DayName = " سه شنبه ";
					break;
				case DayOfWeek.Wednesday:
					DayName = " چهارشنبه ";
					break;
				case DayOfWeek.Thursday:
					DayName = " پنج شنبه ";
					break;
				case DayOfWeek.Friday:
					DayName = " جمـــعه ";
					break;
			}

			return DayName;
		}




	}
}