
npm install -g create-react-app   نصب  پکیج ریکت بصورت عمومی

//*************************************************************************************

create-react-app Projectname   ایجاد پروژه 

//**************************************************************************************

src/index.js فایل اصلی پروژه

//***************************************************************************************

React-Dom برای اینکه بتوانیم یک المنت را درون المنت دیگر قرار بدهیم استفاده میکنیم
ReactDom.Render(ComponentElementJsx,ElementReplace);

//***************************************************************************************

npm start  اجرای پروژه

//***************************************************************************************

برای نام گذاری کامپوننت ها از حروف بزرگ استفاده میکنیم و همچنین پوشه های که داخل پوشه کاپوننت ایجاد میکنیم باید با حروف بزرگ باشد
و بهتر است برای هر کامپوننت یک فایل هم نام با آن بعنوان استایل یا همان سی اس اس در نظر گرفته شود

//****************************************************************************************

array destructuring  به چه معناست؟
const [title,name]=data.objperson;

//****************************************************************************************
object destructuring  به چه معناست؟
function Test({title,lastname})
{
}
//****************************************************************************************
npm install json-server برای ایجاد یک سرور بک اند در ریکت 

//****************************************************************************************
برای نام گذاری از فایل ها و پوشه ها از اصول کمیل کیس یا شروع با حروف کوچک  استفاده کنید بجز کامپوننتها
کامپوننت ها باید با حروف بزرگ شروع شوند

//**********************************************************************************
در پوشه زیر باید یک پوشه کامپوننت ایجاد کنیم و داخل هر پوشه کامپوننت میتوان یک پوشه دیگر ایجاد کرد که داخل آن پوشه یک فایل جاوااسکریپت و یک فایل سی اس اس با همان نام برای ظاهر آن

//**************************************************************************************

useEffect  برای بارگذاری اولیه داده‌ها در صفحه استفاده میکنیم

import react, { useEffect, useState } from "react";
const [products,SetProducts]=useState([]);

useEffect(()=>{

  SetProducts([
    {id:1,title:"عنوان یک"},
    {id:2,title:"عنوان دوم"},
    {id:3,title:"عنوان سوم"},
    {id:4,title:"عنوان چهارم"},
    {id:5,title:"عنوان پنجم"}
]);
  
},[]);

[]-->نشان دهنده این است که یکبار اجرا شود

//******************************************************
یک مثال واقعی تر:

useEffect(() => {
  const fetchProducts = async () => {
    try {
      const response = await fetch('/api/products');
      const data = await response.json();
      setProducts(data);
    } catch (error) {
      console.error("خطا در دریافت محصولات:", error);
    }
  };

  fetchProducts();
}, []);



//**********************************************************************************************

const [count, setCount] = useState(0);
    const [text, setText] = useState('');
    
    useEffect(() => {
      console.log('Effect runs on every render');
    }, [count, text]); // Including both 'count' and 'text' as dependencies  با تغییر کردن دو تا فیلد مورد نظر تابع مورد نظر هر بار اجرا میشود


//*********************************************************************************************
