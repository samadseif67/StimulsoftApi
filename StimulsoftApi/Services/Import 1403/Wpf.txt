انواع layout

<Grid>  برای صفحه اصلی با کارایی بالا استفاده میشود
        
        <StackPanel Orientation="Horizontal"></StackPanel>   هنگامی که بخواهیم عناصر را بصورت افقی یا عمودی در کنار همدیگر قرار بدهیم
        <StackPanel Orientation="Vertical"></StackPanel>   هنگامی که بخواهیم عناصر را بصورت افقی یا عمودی در کنار همدیگر قرار بدهیم
     
      <DockPanel></DockPanel> برای اینکه بتوانیم عناصر داخل این پنل به راحتی به سمت چپ یا راست هدایت کنیم
        
</Grid>


//**********************************************************************************
برای تعریف ستون به صورت زیر عمل میکنیم

 <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition> عرض آن به اندازه محتویات داخل آن باشد  
            <ColumnDefinition Width="*"></ColumnDefinition>  هر چقدر که از عرض باقی ماند را تصاحب کند
            <ColumnDefinition Width="2*"></ColumnDefinition> دو برابر از عرضی که باقی مانده را تصاحب کند
        </Grid.ColumnDefinitions>
      
      <Border Grid.Column="0" Width="250" Background="Violet" BorderThickness="2" Margin="2,2,2,2" BorderBrush="Gray"></Border>  برای ایجاد یک حاشیه در اطراف ستون صفر ام بصورت روبه رو عمل میکنیم و چون عرض 250 داده ام دیگر ستون اول عرض آن فیکس میشود
      <Border Grid.Column="1"   Background="Blue" BorderThickness="2" Margin="2,2,2,2" BorderBrush="Gray" HorizontalAlignment="Stretch"  Name="HomePanel"></Border>  برای ایجاد یک حاشیه در اطراف ستون یکم ام بصورت روبه رو عمل میکنیم و یک نام به آن میدهیم که بتوانیم سمت کد سی شارپ ان را کنترل کنیم
      <Border Grid.Column="1"  Visibility="Collapsed" Background="Blue" BorderThickness="2" Margin="2,2,2,2" BorderBrush="Gray" HorizontalAlignment="Stretch" Name="PersonalPanel"></Border>  برای ایجاد یک حاشیه در اطراف ستون یکم ام بصورت روبه رو عمل میکنیم و یک نام به آن میدهیم که بتوانیم سمت کد سی شارپ ان را کنترل کنیم و همچنین می توانیم با استفاده از اتربیوت وزیبلیتی حالت پنهان کنیم یا نمایش بدهیم
     


</Grid>

//***********************************************************************************
CanUserAddRows کاربر بصورت دستی نتواند یک سطر به گرید اضافه کند
CanUserResizeColumns کاربر بتواند ریسایز کند ستون ها رو
ColumnWidth="*" وقتی ستاره هست یعنی تمام عرض تمام ستون ها با هم برابر باشد
MinColumnWidth="100"  حداقل عرض ستون را مشخص میکنیم تا وقتی که داده ای وجود نداشت همه بهم نچسبنند
SelectionChanged هنگامی که روی سطری کلیک شده چه رویدادی انجام شود
برای نمایش اطلاعات

<DataGrid Name="PersonGrid" CanUserAddRows="False" CanUserResizeColumns="True" CanUserResizeRows="True" HorizontalAlignment="Stretch" ColumnWidth="*" MinColumnWidth="100" SelectionChanged="PersonGrid_SelectionChanged" ></DataGrid>


تفاوت 
list
observablecollection
مثلا یک دیتا گرید از یک لیست پر میشود و برای اینکه همیشه داده ها درست نمایش داده شود باید لیست رفرش شود
اما ابزروبیل کالکشن مثل لیست می باشد اما بمحض تغییرات خودش سمت فرانت را با خبر میکند و دیتا گرید بصورت اتوماتیک داده هاش بروز میشود
//********************************************************************************************************************************************

تفاوت stackpanel با dockpanel
stackpanel  تمام عناصر مثل اینپوت و کمبو بصورت عمودی پشت سر هم قرار میگیرد
dockpanel تمام عناصر مثل اینپوت و کمبو بصورت افقی پشت سر هم قرار میگیرد 

//*********************************************************************************************************************************************
windowStartupLocation  موقعیت فرم مورد نظر در حالت اجرایی پروژه مثلا فرم وسط صفحه نمایش داده شود
FlowDirection برای راست به چپ کردن یا برعکس از خصوصیات رو به رو استفاده میکنیم
QuickAccessToolbar  محلی برای ایجاد دکمه ها برای دسترسی سریع در ریبون
RibonSplitButton دکمه های در قسمت ریبون
smallimagesource برای قرار دادن آیکن روی دکمه ها از خصوصیات رو به رو استفاده میکنیم

RibonTab
RibonGroup
Cursor="hand" نمایش دست روی المنت های ریبون 