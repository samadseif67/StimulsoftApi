cluster - node -pod 
کلاستر مجموعه ای از نود ها است و همچنین نود ها مجموعه ای از پاد ها هستند 
نود را میتوان همان سرور ها در نظر گفت
هر نود یک آی پی دارد
و نود های مختلف از طریق آی پی میتواندد با هم در ارتباط باشند
پاد کوچکترین جز می باشد که کوبرنیتز میتواند آن را مدیریت کند
پاد مجموعه ای از کانتینر ها است
به صورت کلی کوبرنیتز کانتینرها را مدیریت نمی کند بله پاد ها را مدیریت می کند
kubectl action resoure شکل کلی دستور
kubectl run hellword --image=imagename  ایجاد پاد
kubectl get pods     گرفتن تمام پادها
kubectl describe pod helloword  اطلاعات مهم مربوط به پاد را نمایش میدهد
kubectl get pod helloword -o json تمام اطلاعات مربوط به پا در در خروجی جی سان نمایش بده
kubectl port-forward pod/helloword  8080:80 برای تنظیم پورت به پاد مورد نظر برای مشاهده در مروگر 
start "" /B kubectl port-forward pod/firstpod1 8080:3000  برای تنظیم پورت به پاد مورد نظر برای مشاهده در مرورگر و همچنین در پس زمینه اجرا مشود و کامنت پرامت قفل نمیشود

kubctl delete pod helloword برای حذف پاد مورد نظر

//******************************************************************************************************************************
ایجاد یک فایل یمل که داخل آن یم پاد تعریف کرده ایم

برای ایجاد یک پاد بر روی فایل یمل

حتما باید فاصله بعد از دو نقطه باشد
مثل 
apiVersion: V1




apiVersion:V1 ورژن کوبرنیتیز که روی سیستم داریم استفاده میکنیم

kind:pod   ریسورس یا منبع را مشخص میکنیم

metadata: توصیف داده های اضافی
  name:Hello-kube   نام پاد را مشخص میکنیم

spec:  اطلاعات خاص را مینویسم
  containers:  تعریف کانتینرها
    - name:web1  یک نام برای کانتینر قرار میدهیم
      image:node1  نام ایمجی که مد نظر داریم
      imagePullPolicy: Never وقتی برابر با خط زیر باشد ابتدا روی سیستم خودمان دنبال ایمیج میگرد ،در صورتی که وجود نداشته باشد دانلود میکند

//******************************************************************************************************************************



kubectl apply -f podfile.yaml برای اجرای فایل یمل در کوبرنیتیز

kubectl delete -f podfile.yaml  برای برگرداندن یا حذف چیزی های که قبلا از طریق این فایل اجرا شده یا ایجاد شده است


//********************************************************************************************************************************
وظیفه deployment در کوبرنیتیز
مسولیت چند تا پاد را بعهده دارد
ممکنه یک پاد باشد یا چند تا پاد
در صورتی که یک پاد حذف یا خراب شود و نتواند سرویس دهد سریعا یک پاد توسط دیپلویمنت جایگزین میشود




kubectl create deploy hello-kube --image=node1    برای ایجاد یک دپلوی منت که داخل آن یک پاد وجود دارد


kubectl get deploy hello-kube -o json تمام اطلاعات مربوط به دپلوی منت را نمایش بده

kubectl get deploy hello-kube -o jsonpath="{.spec.template.metadata.labels}" تمام اطلاعات مربطو به دپلوی منت بصورت جی سان باشد اما فقط اطلاعاتی که مشخص کرده ام 

kubectl get pods -l app=hello-kube   تمام پاد های که لیبیل مورد نظر را دارند را بازیابی کنیم

kubectl port-forward deployment/Hellokube --8080:80   برای ارائه پورت به دپلوی برای نمایش یک پاد در مرورگر
kubectl port-forward deployment/mongo 28015:27017

kubectl delete deploy hello-kube   برای حذف دپلوی مورد نظر - در صورتی که حذف انجام شود تمام پاد های که زیر نظر آن دیپلوی هستند حذف میشود

//*********************************************************************************************************************************

تعریف دپلوی منت در فایل 

apiVersion:apps/v1    
kind:Deployment   نوع منبع یا ریسورس را مشخص میکنیم

metadata:
  name:Hello-Word    نام دپلوی منت را مشخص میکنیم

spec:در این قسمت باید مشخص کنیم که دپلویمنت چه پاد های را باید مدیریت کند
  selector:
    matchlabels:
      app:Hello-Word   دپلویمنت میتواند پادهای که لبیل با کلید و مقدار مشخص روبه رو را دارند را میتواند مدیریت کند


template: پادهای که همراه با این دپلویمنت میخواهیم ایجاد کنیم
  metadata:
    labels:
      app:Hello-Word  پاد ها با لیبیل رو برور ایجاد شود
  spec:       مشخصات پاد را مشخص میکنیم 
    containers:
      - name:web1
        images:node1/sql
        ports:
          - containerport:5000


//****************************************************************************************************************************************

برای اتصال به یک کانتینر در یک پاد به چه صورت عمل میکنیم

kubectl exec deploy/hello-word -c web1 -it -- sh    ابتدا از طریق نام دپلویمنت وارد شو سپس نام کانتینر مشخص شود سپس یک تعامل برقرار شود و سپس وارد مسیر شل شود

hostname -i   هنگامی که از طریق دستور بالا وارد شل بشویم میتوانیم از طریق همین دستور آی پی پاد را بدست بیاوریم
داحل هر پاد چند تا کانتینر میتواند باشد که آدرس همان پاد را میگیرد با پورت های متفاوت

//****************************************************************************************************************************************

مشاهده لاگ های یک کانتینر از طریق دپلوی منت
-c اشاره به کانتینر دارد

kubectl logs deploy/hello-word -c web1 

//**************************************************************************************************************************************
برای مشاهده آی پی پاد  
kubectl get pod -l app=hello-kube1  -o wide

//*************************************************************************************************************************************
پاد ها از طریق آی پی می توانند با هم ر ارتباط باشند
اما چون پاد ها ممکن هست بعد از مدتی حذف شود و پاد دیگری جای آن را بگیرد بنابراین آی پی آن هم تغییر میکند 
بهترین کار این است که یک سرویس تعریف کنیم که مدیریت شبکه ای پاد ها را مدیریت کند 
و با استفاده از نام سرویس میتوانیم پاد ها را مدیریت کنیم زیر نام سرویس دیگر مثل آی پی تغییر نمی کند و یک سرویس میتواند چندین پاد را مدیریت کند


//*************************************************************************************************************************************
برای اینکه بتوانیم از طریق دستورات صفحه اچتیمل یک صفحه را ببینیم

curl google.com
یا
curl 216.239.38.120

//*************************************************************************************************************************************
 برای اینکه بتوانیم زیر ساخت شبکه پاد های را مدیریت کنیم باید از سرویس ها استفاده کنیم
یا به عبارتی برای مدیریت و هماهنگی بین پاد نیاز به سرویس ها داریم مثل
ClusterIP

برای ایجاد یک سرویس بصورت زیر عمل میکنیم

apiVersion:V1
kind:Service
metadata:
  name:hello-kube1-svc

spec:یکسری مشخصادت باید توصیف کنیم
  selector:
    app=Hello-kube-1  در این قسمت وظیفه سرویس این است که تمام پاد های که لیبیل رو به رو را دارند  را مدیریت میکند
  ports:
    - port:8080  این سرویسی که ایجاد کرده ایم روی چه پورتی گوش یا به عبارتی در مرورگر با چه پورتی قابل مشاهده باشد 
      targetport:7586    موقعی که یک پاد را ایجاد میکنیم و درون ان یک کانتینر تعریف میکنیم به آن کانتینر یک پورت اختصاص می دهیم آن پورت اختصاص داده شده را اینجا مینویسیم
type:ClusterID    در صورتی که نوشته نشده باشد کلاستر آی دی در نظر گرفته میشود و وقتی به این صورت تعریف شود یعنی از بیرون امکان دسترسی به این پاد وجود ندارد و بصورت داخل شبکه ای امکان برقراری ارتباط وجود دارد
type:loadBalancer     وقتی به این صورت تعریف شود یعنی از بیرون امکان دسترسی به این پاد وجود دارد  و میتوان خارج از شبکه داخلی به آن دسترسی داشت

//*************************************************************************************************************************************
svc به کلمه سرویس اشاره می کند

kubectl get svc   hello-kube1-svc12      برای مشاهده اطلاعات سرویس مورد نظر


//**************************************************************************************************************************************  




//*************************************************************************************************************************************







