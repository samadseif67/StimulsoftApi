public interface ICurrentUserService
{
    ClaimsPrincipal User { get; }
    string? UserId { get; }
    bool IsInRole(string role);
    bool HasClaim(string type, string value);
}
 

//*************************************************************************************************
using Microsoft.AspNetCore.Http;
using System.Security.Claims;

public class CurrentUserService : ICurrentUserService
{
    private readonly IHttpContextAccessor _httpContextAccessor;

    public CurrentUserService(IHttpContextAccessor httpContextAccessor)
    {
        _httpContextAccessor = httpContextAccessor;
    }

    public ClaimsPrincipal User => _httpContextAccessor.HttpContext?.User!;
    public string? UserId => User?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    public bool IsInRole(string role) => User?.IsInRole(role) ?? false;
    public bool HasClaim(string type, string value) => User?.HasClaim(type, value) ?? false;
}

//*************************************************************************************************



builder.Services.AddHttpContextAccessor();
builder.Services.AddScoped<ICurrentUserService, CurrentUserService>();
