using System;
using System.IO;
using System.Web.Mvc;
using ICSharpCode.SharpZipLib.Zip;

public class BackupController : Controller
{
    private string[] GetPartFilePaths()
    {
        return new[]
        {
            Server.MapPath("~/App_Data/backup_part1.bak"),
            Server.MapPath("~/App_Data/backup_part2.bak"),
            Server.MapPath("~/App_Data/backup_part3.bak")
        };
    }

    public ActionResult DownloadPartAsFullZip(int partNumber)
    {
        if (partNumber < 1 || partNumber > 3)
            return HttpNotFound("Invalid part.");

        var allPartPaths = GetPartFilePaths();

        foreach (var path in allPartPaths)
        {
            if (!System.IO.File.Exists(path))
                return HttpNotFound($"File not found: {path}");
        }

        // نام فایل ZIP بر اساس شماره قسمت (مثلاً backup_part1.bak.zip)
        string fileName = $"backup_part{partNumber}.bak.zip";
        var memoryStream = new MemoryStream();

        using (var zipStream = new ZipOutputStream(memoryStream))
        {
            zipStream.SetLevel(6);

            foreach (var partPath in allPartPaths)
            {
                string entryName = Path.GetFileName(partPath);
                var entry = new ZipEntry(entryName)
                {
                    Size = new FileInfo(partPath).Length,
                    DateTime = DateTime.Now
                };

                zipStream.PutNextEntry(entry);

                using (var fileStream = File.OpenRead(partPath))
                {
                    fileStream.CopyTo(zipStream);
                }

                zipStream.CloseEntry();
            }

            zipStream.Finish();
        }

        memoryStream.Position = 0;
        return File(memoryStream, "application/zip", fileName);
    }
}