فایل های یک دیتابیس:
MDF:محتویات اصلی دیتابیس نگهداری میشود
LDF:لاگ دیتابیس را نگهداری میکند از جمله اضافه شدن دیتا یا حذف دیتا و ...
//************************************************************************************************

page:
اطلاعات هر جدول درون پیج ها ذخیره میشود در صورتی که بیش از یک پیج باشد نیاز به ایندکس گذاری دارد


Dbcc IND



//************************************************************************************************

Scan :جستجوی یک آیتم براساس مقایسه کردن روی تمام آیتم ها
index:لیستی از داده های که براساس موضوع  یا عنوان خاصی مرتب شده باشد 
//*************************************************************************************************
انواع ایندکس
Clustered index به صورت فیزیکی باعث مرتب سازی جدول میشود
NonClustered index به صورت فیزیکی باعث مرتب شدن جدول نمیشود و در یک حافطه ای دیگری انجام میشود
xml index فقط روی داده های ایکس ام ال 
spatial index برای داده های موقعیت های جغرافیایی هست
column stored index -- باعث میشود که جدول فقط خواندنی شود و فقط روی یکسری نوع داده ای جواب میدهد و بیشتر برای دیتاهاورس استفاده میشود

//******************************************************************************
sp_HelpIndex orders     تمام ایندکس های جدول مورد نظر را نمایش میدهد


//******************************************************************************
heap  جدولی که هیچ ایندکسی ندارد
///**************************************************************************
در کلسترایندکس جدول بصورت فیزیکی مرتب سازی میشود
//**************************************************************************
تعریف کلستر ایندکس
create clustered index clusterindexname on tablename(fieldname)
create clustered index IXC on Customers(customerid)

تعریف کلستر ایندکس به همراه یونیک یا منحصر به فرد
create unique clustered index clusterindexname on tablename(fieldname)
create unique  clustered index IXC on Customers(customerid)

//***********************************************************************
تعریف نان کلستر ایندکس
create nonclustered index clusterindexname on tablename(fieldname)
یا 
create index clusterindexname on tablename(fieldname)

//*************************************************************************
DBCC DropCleanBuffers  خالی یا پاک کردن کش حافظه تخصیص داده شده  به صفحات داده

//*******************************************************************************
set statistics io on فعال کردن آمار مربوط به دیسک
set statistics time on فعال کردن آمار مربوط به زمان اجرا


show_statistics مشخص میکند که وقتی از جدول اطلاعات میخوانیم از کدام ایندکس استفاده میکند

Dbcc Show_Statistics('tablename','IndexName')
Dbcc Show_Statistics('orders','IX_EmployID')
//***************************************************************************
logic read 20   یعنی 20 پیچ یا صفحه از اطلاعات و رکورد ها را خوانده تا اطلاعات را بدست آورد

//***************************************************************************
هر جدول هم فقط یک کلاسترایندکس دارد
//**************************************************************************
بدترین جدول در اس کیو ال از نوع زیر هست چون کلاستر ایندکس ندارد
heap

. در صورتیکه یک جدول هیپ باشد و روی آن ایندکس نان کلسترایندکس پیاده سازی کنیم بدترین نوع نان کلستر ایندکس است
//****************************************************************************
nonclustered index 
به سه بخش تقسیم شده است
rootpage --ریشه می باشد 
leaflevel  --برگ مربوط به ایندگس
datalevel --سطح داده

//**********************************************************************
تفاوت کلاستراندکس با نان کلستر ایندکس

clusterindex :چون مرتب سازی فیزیکی است سطح داده با سطح برگ یکی می باشد و سطح برگ همان مرتب سازی بودن را نشان میدهد
nonclusteredindex:چون مرتب سازی فیزیکی نیست بنابراین سطج برگ با داده یکی نیست و جدا هست سطح داده جدا و سطح برگ که داده ها مرتب هستند جدا هست

//********************************************************************
select * from customer with(index(IX_NC)) where id=10  سلکت را مجبور میکنیم که از ایندکس مورد نظر استفاده کند
select * from customer with(index(0)) where id=10  سلکت را مجبور میکنیم که از هیج ایندکس ای   استفاده نکند 

//************************************************************************
bookmark look up زمانی اتقاق می افتد که فیلد های که انتخاب شده است در ایندکس گذاری نیامده باشد و مجبور باشیم به سطح دیتا لول برگردیم تا مابقی داده دسترسی داشته باشیم

//********************************************************************************************************
تفاوت 
primary key:وقتی یک فیلد از این نوع باشد نمی توان آن را برابر نال قرار داد
unique:وقتی یک فیلد از این نوع باشد می توان آن را برابر نال قرار داد اما فقط یک بار میتوان  آن را برابر نال قرار داد 

//*********************************************************************************************************
 sp_HelpConstraint

//*********************************************************************************************************
filterIndex فقط رکوردهای که دارای شرایط یا همان شرط ها باشند در ایندکس شرکت میکنند
افزایش سرعت
ایندکس کم حجم تری داشته باشیم
هزینه کمتری در به روز نگهداشتن ایندکس متحمل شویم
فقط روی نان کلستر ایندکس ها جواب میدهد
ایندکس مورد نظر نباید مورد تبدیل قرار بگیرند
cast-convert
ایندکس مورد نظر نمیتواند روی عملیات محاسباتی قرار بگیرد

create nonclusteredindex on person(nationalcode) include(name,lastname)
where (nationalcode<>'' and name is not null)  // در این قسمت میتوان فیلتر را مشخص کرد 

//*********************************************************************************************************
update statistics  tablename     وقتی که داده ای به جدول اضافه میشود  برای اینکه در آمار ایندکس ها بیایید و آمار ها بروز شود و سیستم بهتر بتواند از  ایندکس ها استفاده کند باید از دستور زیر استفاده کنیم
update statistics  customers

Dbcc Show_Statistics('tablename','IndexName')  //در این قسمت میتوانیم آمار جدول به همراه اطلاعات ایندکس ها ببینیم
Dbcc Show_Statistics('customers','IX_EmployID')


exec sp_updatestats   برای بروز کردن آمار تمام استکتیس ها کل جدول های یک دیتا بیس


Alter database  databasename   //بصورت اتوماتیک آمار را بروز رسانی میکنیم
set auto_update_statistics on with  No_Wait 


drop statistics tablename.filedname   برای حف آمار مورد نظر

//*********************************************************************************************************
unique: وقتی که یک ستون از نوع یونیک باشد و داده تکراری بخواهد داخل جدول درج شود با خطا مواجعه میشویم برای اینکه با خطا مواجعه نشویم باید دستور زیر را بنویسیم
دستور زیر باعث میشود که برنامه با خطا مواجعه نشود و همچنین از درج داده تکراری جلوگیری میکند و برنامه میتواند به روند خودش ادامه دهد

create unique clustered index clustername  on tablename(filedname or columnname)
with(ignore_dup_key=on)

//**********************************************************************************************************
در صورتیکه ایندکس از قبل وجود داشته باشد حذف میشود و دوباره با ساختار جدید ایجاد میشود
از این گزینه بیشتری برای بازسازی ایندکس استفاده میکند

create unique clustered index clustername  on tablename(filedname or columnname)
with(Drop_Existing=on)

//***********************************************************************************************************
tempdb:

وقتی که از ایندکس ها استفاده میکنیم بصورت پیش فرض از فضای خود همان دیتابیس استفاده میکند برای اینکه عملیات مرتب سازی روی دیتابیس تمپ انجام شود و نتیجه برگشت داده شود از دستور زیر استفاده میکنیم


create unique clustered index clustername  on tablename(filedname or columnname)
with(sort_in_tempdb=on,Drop_Existing=on)

//************************************************************************************************************
ایجاد ایندکس به شکل آنلاین بدون اینکه کاربر در سطح شبکه قفل شود
در حقیقت هیچ قفلی بر روی شبکه ایجاد نمیشود
با اعمال این حالت پروسه ساخت ایندکس ممکن است طولانی شود

create unique clustered index clustername  on tablename(filedname or columnname)
with(online=on,Drop_Existing=on)


/***********************************************************************************************************

قفل مربوط به یک جدول را در سطح ردیف یا همان رکورد های آن اعمال میکند

create unique clustered index clustername  on tablename(filedname or columnname)
with(Allow_Row_Locks=on,Drop_Existing=on)

//************************************************************************************************************

قفل مربوط به یک جدول را در سطح  صفحه آن اعمال میکند

create unique clustered index clustername  on tablename(filedname or columnname)
with(Allow_Page_Locks=on,Drop_Existing=on)

//***************************************************************************************************************

فشرده سازی فیلدهای موجود براساس ردیف ها در ایندکس انجام میشود
create unique clustered index clustername  on tablename(filedname or columnname)
with(Data_Compression=row,Drop_Existing=on)


فشرده سازی فیلدهای موجود براساس    پیج یا همان صفحه در ایندکس انجام میشود
create unique clustered index clustername  on tablename(filedname or columnname)
with(Data_Compression=page,Drop_Existing=on)

//***************************************************************************************************************

برای اینکه مشخص کنیم چند هسته از سیستم درگیر ساخت ایندکس شوند

create unique clustered index clustername  on tablename(filedname or columnname)
with(MaxDop=5,Drop_Existing=on)


sp_Configure 'max degree of parallelism'    برای مشاهده آمار اینکه چند هسته درگیر ساخت ایندکس هستن
//****************************************************************************************************************

insert into person 
go 10 // ده بار دستور بالا را اجرا کن

//*****************************************************************************************************************